plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.github.triplet.play' version '3.8.4'
}

apply from: "${project.rootDir}/buildsystem/android-defaults.gradle"

android {

    buildFeatures {
        buildConfig = true
    }

    defaultConfig {
        def buildNumber = getBuildNumber()
        multiDexEnabled true

        namespace "aws.apps.usbDeviceEnumerator"
        versionCode buildNumber
        versionName "3.0.0." + buildNumber

        buildConfigField "String", "USB_DB_URL", quoteString("https://alt236.co.uk/download/db/android_usb.db3")
        buildConfigField "String", "USB_DB_FILE_NAME", quoteString("usb.db3")

        buildConfigField "String", "COMPANY_DB_URL", quoteString("https://alt236.co.uk/download/db/android_company.db3")
        buildConfigField "String", "COMPANY_DB_FILE_NAME", quoteString("company.db3")

        buildConfigField "String", "LOGO_ZIP_URL", quoteString("https://alt236.co.uk/download/db/company_logos.zip")
        buildConfigField "String", "LOGO_ZIP_FILE_NAME", quoteString("logos.zip")
    }

    signingConfigs {
        release {
            storeFile file(System.getenv("ANDROID_KEYSTORE") ?: "[KEY_NOT_DEFINED]")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
        }

        debug {
            storeFile file("${project.rootDir}/buildsystem/signing_keys/debug.keystore")
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
        }
    }

    dependencies {
        implementation project(':usbdeviceenumerator')
        implementation project(':android-usbmanager')

        implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
        implementation "com.google.android.material:material:$android_material_version"
        implementation 'com.android.support:multidex:1.0.3'

        testImplementation "junit:junit:$junit_version"

        androidTestImplementation "androidx.test:runner:$andoridx_test_runner_version"
        implementation "com.google.dagger:hilt-android:2.47"
        kapt "com.google.dagger:hilt-compiler:2.47"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (isRunningOnCi()) {
                signingConfig signingConfigs.release
            }
        }

        debug {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    // Allow references to generated code
    kapt {
        correctErrorTypes true
    }
}

play {
    def credentialsPath = System.getenv("GPLAY_DEPLOY_KEY") ?: "[KEY_NOT_DEFINED]"
    def lastCommitMessage = getLastGitCommitMessage().take(50)
    logger.warn("GPP Config: $credentialsPath")
    logger.warn("Release Name: '$lastCommitMessage'")

    if (isRunningOnCi()) {
        enabled = true
        track = "internal"
        //userFraction = 1.0
        releaseStatus = "completed"
        serviceAccountCredentials = file(credentialsPath)
        releaseName = lastCommitMessage
        artifactDir = file("${project.rootDir}/app/build/outputs/apk/release/")
    } else {
        enabled = false
    }
}
